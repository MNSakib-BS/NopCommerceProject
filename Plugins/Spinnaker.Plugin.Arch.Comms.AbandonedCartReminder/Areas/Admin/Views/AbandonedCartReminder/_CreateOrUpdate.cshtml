@using Nop.Arch.Models.AbandonedCartReminder
@using Nop.Services
@using Nop.Core.Domain.Catalog;
@using Nop.Web.Framework.Models.DataTables;
@using Nop.Arch.Models.StoreType;
@using Nop.Web.Framework.UI;
@using Nop.Web.Framework.Infrastructure;
@using Nop.Web.Framework.Mvc.Razor;
@using Nop.Core.Domain.Messages;

@model AbandonedCartReminderModel

<div asp-validation-summary="All"></div>
<input asp-for="Id" type="hidden" />

<div class="content">
    <div class="form-horizontal">
        <div class="row">
            <div class="col-md-12 clearfix">
                <div class="pull-left">
                    @await Component.InvokeAsync("SettingMode", new { modeName = "abandonedcartreminder-advanced-mode" })
                </div>
            </div>
        </div>

        <div class="panel-group">
            @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.StoreDetailsTop, additionalData = Model })
            <div class="panel panel-default">
                <div class="panel-body">
                    <div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <nop-label asp-for="Description" />
                            </div>
                            <div class="col-md-9">
                                <nop-editor asp-for="Description" asp-required="true" />
                                <span asp-validation-for="Description"></span>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <nop-label asp-for="Active" />
                            </div>
                            <div class="col-md-9">
                                <nop-editor asp-for="Active" />
                                <span asp-validation-for="Active"></span>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-9">
                                <div class="row">
                                    <div class="col-md-3">
                                    </div>
                                    <div class="col-md-3">
                                        <nop-editor asp-for="DelayBeforeSend" />
                                        <span asp-validation-for="DelayBeforeSend"></span>
                                    </div>
                                    <div class="col-md-3">
                                        <nop-select asp-for="DelayPeriodId" asp-items="@(((MessageDelayPeriod)Model.DelayPeriodId).ToSelectList())" style="max-width: 200px;" />
                                        <span asp-validation-for="DelayPeriodId"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <nop-label asp-for="SelectedStoreIds" />
                            </div>
                            <div class="col-md-9">
                                <div class="row">
                                    <div class="col-md-4">
                                        <nop-select asp-for="SelectedStoreIds" asp-items="Model.AvailableStores" asp-multiple="true" />
                                        <script>
                                            $(document).ready(function() {
                                                var storesIdsInput = $('#@Html.IdFor(model => model.SelectedStoreIds)').data("kendoMultiSelect");
                                                storesIdsInput.setOptions({
                                                    autoClose: false,
                                                    filter: "contains"
                                                });

                                                @if (Model.AvailableStores.Count == 0)
                                            {
                                                <text>
                                                                        storesIdsInput.setOptions({
                                                                            enable: false,
                                                                            placeholder: 'No stores available'
                                                                        });
                                                                        storesIdsInput._placeholder();
                                                                        storesIdsInput._enable();
                                                </text>
                                            }
                                            });
                                        </script>
                                    </div>
                                    <div class="col-md-8">
                                        @await Component.InvokeAsync("MultistoreDisabledWarning")
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.StoreDetailsBottom, additionalData = Model })
            </div>
        </div>
    </div>
