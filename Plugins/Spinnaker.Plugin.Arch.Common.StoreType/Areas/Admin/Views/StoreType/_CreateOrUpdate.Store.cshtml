@using Nop.Arch.Models.StoreType
@model StoreTypeModel

<div class="panel-body">
    @if (Model.Id > 0)
    {
        <div class="panel panel-default">
            <div class="panel-body">
                    <script>
                    $(document).ready(function() {
                        $('#addStoreTypeMapping').click(function() {
                            var storeId = $("#@Html.IdFor(model => model.Store)").val();

                            if (storeId == 0) {
                                $("#addStoreTypeMappingAlert").click();
                                return;
                            }

                            $('#addStoreTypeMapping').attr('disabled', true);

                            var postData = {
                                storeId: storeId,
                                storeTypeId: '@Model.Id'
                            };
                            addAntiForgeryToken(postData);

                            $.ajax({
                                cache: false,
                                type: "POST",
                                url: "@(Url.Action("StoreTypeMappingAdd", "StoreType"))",
                                data: postData,
                                success: function (data, textStatus, jqXHR) {
                                    if (!data.Result) {
                                        return;
                                    }                                        
                                    updateTable('#storetypemapping-grid');
                                },
                                error: function (jqXHR, textStatus, errorThrown) {
                                    $("#storeTypeMappingAddAlert").click();
                                },
                                complete: function (jqXHR, textStatus) {
                                    $('#addStoreTypeMapping').attr('disabled', false);
                                }
                            });
                        });
                    });
                </script>
                <div class="form-group">
                    @Html.DropDownListFor(m => m.Store, ViewBag.Stores as List<SelectListItem>, "")
                    <button type="button" id="addStoreTypeMapping" class="btn btn-primary">Link Store</button>
                </div>
                <!--<div class="form-group">
                    <form method="post" asp-controller="StoreType">
                        <div class="inputs">
                            <label asp-for="Store"></label>
                            @Html.DropDownListFor(m => m.Store, ViewBag.Stores as List<SelectListItem>, "")
                            <input type="button" value="Create" onclick="location.href='@Url.Action("StoreTypeMappingAdd", "StoreType", Model)'" class="btn btn-primary" />
                        </div>
                    </form>
                </div>-->
            </div>
        </div>
        <div class="sub-panel">
            @await Html.PartialAsync("Table", new DataTablesModel
        {
        Name = "storetypemapping-grid",
        UrlRead = new DataUrl("StoreTypeMappingList", "StoreType", new RouteValueDictionary { [nameof(Model.StoreTypeMappingSearchModel.StoreTypeId)] = Model.Id, [nameof(Model.StoreTypeMappingSearchModel)] = Model.StoreTypePictureSearchModel }),
        UrlDelete = new DataUrl("StoreTypeMappingDelete", "StoreType", null), 
        //ServerSide = false,
        Length = Model.StoreTypePictureSearchModel.PageSize,
        LengthMenu = Model.StoreTypePictureSearchModel.AvailablePageSizes,
        ColumnCollection = new List<ColumnProperty>
        {
        new ColumnProperty(nameof(StoreTypeMappingModel.Name))
        {
        Title = "Name",
        Width = "200",
        Editable = false
        },
        new ColumnProperty(nameof(StoreTypeMappingModel.Id))
        {
        Title = T("Admin.Common.Delete").Text,
        Width = "100",
        Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
        ClassName = NopColumnClassDefaults.Button
        }
        }
        })
        </div>
    }
    else
    {
        <div class="panel panel-default">
            <div class="panel-body">
                @T("Admin.StoreTypes.StoreTypes.Pictures.SaveBeforeEdit")
            </div>
        </div>
    }
</div>
<nop-alert asp-alert-id="addStoreTypeMappingAlert" asp-alert-message="@T("Admin.Customers.Customers.Pictures.Alert.AddNew")" />
<nop-alert asp-alert-id="storeTypeMappingAddAlert" asp-alert-message="@T("Admin.Customers.Customers.Pictures.Alert.PictureAdd")" />