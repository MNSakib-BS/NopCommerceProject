@using Nop.Services
@using Nop.Core.Domain.Catalog;
@using Nop.Web.Framework.Models.DataTables;
@using Nop.Arch.Models.StoreType;
@using Nop.Web.Framework.UI;
@using Nop.Web.Framework.Infrastructure;
@using Nop.Web.Framework.Mvc.Razor;

@model StoreTypeModel

<div asp-validation-summary="All"></div>
<input asp-for="Id" type="hidden" />

<div class="content">
    <div class="form-horizontal">
        <div class="row">
            <div class="col-md-12 clearfix">
                <div class="pull-left">
                    @await Component.InvokeAsync("SettingMode", new { modeName = "storetype-advanced-mode" })
                </div>
            </div>
        </div>

        <div class="panel-group">
            @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.StoreDetailsTop, additionalData = Model })
            <div class="panel panel-default">
                <div class="panel-body">
                    <div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <nop-label asp-for="Name" />
                            </div>
                            <div class="col-md-9">
                                <nop-editor asp-for="Name" asp-required="true" />
                                <span asp-validation-for="Name"></span>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <nop-label asp-for="AddPictureModel.PictureId" />
                            </div>
                            <div class="col-md-9">
                                <nop-editor asp-for="AddPictureModel.PictureId" />
                                <span asp-validation-for="AddPictureModel.PictureId"></span>
                            </div>
                        </div>
                        @if (Model.Id > 0)
                        {
                            <div class="form-group">
                                @await Html.PartialAsync("_CreateOrUpdate.Store", Model)
                            </div>
                        }
                    </div>
                </div>
            </div>
            @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.StoreDetailsBottom, additionalData = Model })
        </div>
    </div>
</div>
